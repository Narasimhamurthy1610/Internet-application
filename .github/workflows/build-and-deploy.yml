name: Build & Deploy to EC2

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: 8310222505/internet-application  # update this!
  CONTAINER_PORT: 5000
  HOST_PORT: 5000

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: 'table'
          severity: 'CRITICAL,HIGH'

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Decode SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 -d > key.pem
          chmod 600 key.pem

      - name: SSH and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no \
          -o ServerAliveInterval=60 \
          -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker stop myapp || true
            docker rm myapp || true
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker run -d -p 5000:5000 --name myapp ${{ env.IMAGE_NAME }}:latest
          EOF

      

  deploy-to-prod:
    name: Deploy to Production
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://${{ secrets.EC2_HOST }}
    concurrency:
      group: prod-deploy
      cancel-in-progress: false

    steps:
      - name: Wait for Manual Approval
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Decode SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 -d > key.pem
          chmod 600 key.pem

      - name: Deploy App to Production via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            echo "Stopping old container..."
            docker stop myapp || true
            docker rm myapp || true

            echo "⬇️ Pulling latest Docker image..."
            docker pull --progress=plain ${{ env.IMAGE_NAME }}:latest

            echo "🚀 Running new container..."
            docker run -d -p 5000:5000 --name myapp ${{ env.IMAGE_NAME }}:latest
          EOF

      - name: Send Email Notification on Failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Deployment to Production Failed
          body: |
            Hi Team,

            Deployment to production for the internet-application failed in GitHub Actions.
            
            Repo: ${{ github.repository }}
            Commit: ${{ github.sha }}
            Actor: ${{ github.actor }}
            Workflow: ${{ github.workflow }}
            Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Please check and fix it.

            — GitHub Actions Bot
          to: narasimhamurthy1610@gmail.com
          from: GitHub Actions <${{ secrets.EMAIL_USERNAME }}>


